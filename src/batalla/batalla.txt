Registro: Luchador;
  id: Entero;
  nombre: Cadena;
  vida: Entero;
  ataque: Entero;
  defensa: Entero;
  velocidad: Entero;

  victorias: Entero;
  derrotas: Entero;
Fin_Registro
Procedimiento Batallas();
Inicio
minimo = 1;
maximo = 100;
Enfrentamientos[2]: Entero;
Luchador1: Entero;
Luchador2: Entero;
Luchador1 = Enfrentamientos[1];
Luchador2 = Enfrentamientos[2];
Turno = 1: Entero;
Si (Luchadores.velocidad[Luchador1] > Luchadores.velocidad[Luchador2]) Entonces;
    atacante = Luchador1;
    defensor = Luchador2;
Sino
    atacante = Luchador2;
    defensor = Luchador1;
Fin_Si
Mientras (Luchadores.vida[atacante] > 0) or (Luchadores.vida[defensor] > 0) Hacer;
    esquive = Aleatorio(minimo, maximo);
    Mostrar<<"Turno", Turno;
    Si (esquive < 80) Entonces;
        Si (Luchadores.ataque[atacante] > Luchadores.defensa[defensor]) Entonces;
            Daño_Inflingido = Luchadores.ataque[atacante] - Luchadores.defensa[defensor];
        Sino
            Daño_Inflingido = (Luchadores.ataque[atacante] - Luchadores.defensa[defensor]) / 0.10;
        Fin_Si
        Luchadores.vida[defensor] = Luchadores.vida[defensor] - Daño_Inflingido;
        Mostrar << Luchadores.nombre[atacante], "ha hecho un daño de ", Daño_Inflingido, " el oponente", Luchadores.nombre[defensor], "quedó con: ", Luchadores.vida[defensor], "puntos de vida";
    Sino
        Mostrar << "Ha esquivado el ataque.";
    Fin_Si
    aux = atacante;
    atacante = defensor;
    defensor = aux;
    Turno = Turno + 1;
    Si (Luchadores.vida[defensor] <= 0) Entonces;
        Mostrar<<Luchadores.nombre[defensor], "ha sido derrotado.";
    Fin_Si
Fin_Mientras